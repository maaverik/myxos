alias physicalSP S0;
breakpoint;
physicalSP = ([PTBR + 2 * (SP / 512)] * 512) + (SP % 512);

// Get system call no. from the stack and put it in a register
alias sysCallNo S1;

sysCallNo = [physicalSP - 1];

// Get arguments from stack and put it in registers

if ( sysCallNo == 2) then
// Implementation of Open   
	alias fileName S2;
	fileName = [physicalSP - 3];
	alias fatIndex S3;
	fatIndex = 0;
	while (fatIndex*8 < 512) do
		if ([FAT + fatIndex*8] == fileName) then
			break;
		endif;
		fatIndex = fatIndex + 1;
	endwhile;
	if (fatIndex * 8 > 512) then
		[physicalSP - 2] = -11;
		ireturn;
	endif;

	alias sysWideFOTindex S4;
	sysWideFOTindex = 0;
	while(sysWideFOTindex*2 + 1344 < 1471) do
		if ([1344 + sysWideFOTindex*2] == fatIndex) then
			break;
		endif;
		sysWideFOTindex = sysWideFOTindex + 1;
	endwhile;
	if (sysWideFOTindex*2 + 1344 >= 1471) then
		sysWideFOTindex = 0;
		while(sysWideFOTindex*2 + 1344 < 1471) do
			if ([1344 + sysWideFOTindex*2] == -1) then
				[1344 + sysWideFOTindex*2 + 1] = 0; 	
				break;
			endif;
			sysWideFOTindex = sysWideFOTindex + 1;
		endwhile;
		if (sysWideFOTindex*2 + 1344 >= 1471) then
			[physicalSP - 2] = -12;
			ireturn;
		endif;
	endif;
	alias PID S5;	
	PID = (PTBR - 1024) / 8;
	alias fileDiscriptor S6;
	fileDiscriptor = 0;
	while (fileDiscriptor*2 + 15 < 30) do
		if([READY_LIST + PID*32 + 15 + fileDiscriptor] == -1) then
			[READY_LIST + PID*32 + 15 + fileDiscriptor] = sysWideFOTindex;
			[READY_LIST + PID*32 + 15 + fileDiscriptor + 1] = 0;
			break;  	
		endif;
		fileDiscriptor = fileDiscriptor + 1;
	endwhile;
	if (fileDiscriptor >= 8) then
		[physicalSP - 2] = -1;
		ireturn;
	endif;
	[1344 + sysWideFOTindex*2] = fatIndex;
	[1344 + sysWideFOTindex*2 + 1] = [1344 + sysWideFOTindex*2 + 1] + 1; 
	[physicalSP - 2] = fileDiscriptor;
	ireturn;
endif;

if (sysCallNo == 3) then
	breakpoint;
	alias fileDiscriptor S2;
	fileDiscriptor = [physicalSP - 3];
	if (fileDiscriptor > 7 || fileDiscriptor < 0) then 
		[physicalSP - 2] = -1;
		ireturn;
	endif;

	alias PCB S3;
	PCB = READY_LIST + (PTBR - 1024)/8;
	alias sysWideFOTindex S4;
	sysWideFOTindex = [PCB + 15 + fileDiscriptor];
	if (sysWideFOTindex == -1) then
		[physicalSP - 2] = -1;
		ireturn;
	endif;

	[1344 + sysWideFOTindex*2 + 1] = [1344 + sysWideFOTindex*2 + 1] - 1;
	if ([1344 + sysWideFOTindex*2 + 1] == 0) then
		[1344 + sysWideFOTindex*2] = -1;
	endif;

	[PCB + 15 + fileDiscriptor] = -1;

	[physicalSP - 2] = 0;
	ireturn;
endif;
