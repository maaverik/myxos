load(7,1);			//load exception handler
load(8,2);

load(23,17);		//load interrupt 7
load(24,18);

[READY_LIST + 0] = 0;	//set PID of init to 0

load(25,21);		//load init program
load(26,22);	
load(27,23);	

PTBR = 1024;		//physical address of page table
PTLR = 4;			//page table has 4 entries

[PTBR + 0] = 25; 	//set up entries for init program in page table
[PTBR + 1] = "01";
[PTBR + 2] = 26; 
[PTBR + 3] = "01";
[PTBR + 4] = 27; 
[PTBR + 5] = "01";
[PTBR + 6] = 28; 
[PTBR + 7] = "01";

[READY_LIST + 1] = 2;	//state of init process set to 2 (running)



SP = 3 * 512;		//value set to starting logical address

[28*512] = 0;		//physical address of the process stack set to 0 for implicitly setting IP to 0 on IRET

load (11, 5);		// interrupt 1
load (12, 6);

load (9, 3);		// timer interrupt
load (10, 4);



load(5, 19);		//load FAT
load(6, 20);		//load disk free list

alias counter S0;				//Set system wide open file table to -1
counter = 0;
while ( counter <  128) do			// 64 entries, each of size 2 words
	[ FILE_TABLE + counter + 0] = -1;	// Set FAT Index to -1
	[ FILE_TABLE + counter + 1] =  0;	// Set File Open Count to 0
	counter = counter + 2;			// Move to next entry
endwhile;	

[READY_LIST + 15] = -1;		//Setting up the Per-Process File Open table
[READY_LIST + 16] = -1;
[READY_LIST + 17] = -1;
[READY_LIST + 18] = -1;
[READY_LIST + 19] = -1;
[READY_LIST + 20] = -1;
[READY_LIST + 21] = -1;
[READY_LIST + 22] = -1;
[READY_LIST + 23] = -1;
[READY_LIST + 24] = -1;
[READY_LIST + 25] = -1;
[READY_LIST + 26] = -1;
[READY_LIST + 27] = -1;
[READY_LIST + 28] = -1;
[READY_LIST + 29] = -1;
[READY_LIST + 30] = -1;

load (13, 7);		//interrupt 2
load (14, 8);
 
load (15, 9);		//interrupt 3
load (16, 10);
 
load (17, 11);		//interrupt 4
load (18, 12);

ireturn;
